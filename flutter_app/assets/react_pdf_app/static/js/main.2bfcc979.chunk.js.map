{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["samplePdfDetails","App","props","handleEvent","name","link","console","log","setState","hasEventOccurred","fileLink","fileName","state","window","addEventListener","event","flutter_inappwebview","callHandler","then","fileDetailsJson","this","document","url","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0VAGMA,EACQ,uBADRA,EAEQ,iFAEOC,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRC,YAAc,SAACC,EAAMC,GAEnBC,QAAQC,IAAI,yCACZ,EAAKC,SAAS,CAAEC,kBAAkB,EAAMC,SAFR,uCAE4CL,EAAMM,SAAUP,KAnB5F,EAAKQ,MAAQ,CACXH,kBAAkB,EAClBE,SAAU,GACVD,SAAU,IALK,E,qDASnB,WAAqB,IAAD,OAClBG,OAAOC,iBAAiB,oCAAoC,SAACC,GAC3DF,OAAOG,qBAAqBC,YAAY,qBAAsB,QAC3DC,MAAK,SAACC,GACL,EAAKhB,YAAYgB,EAAgBf,KAAMe,EAAgBd,c,oBAW/D,WAAU,IAAD,OACP,OACEe,KAAKR,MAAMH,iBACT,gCACE,8CAAiBW,KAAKR,MAAMD,YAC5B,cAAC,IAAD,CACEU,SAAU,CACRC,IAAKF,KAAKR,MAAMF,eAKpB,sBAAKa,QAAS,kBAAM,EAAKpB,YAAYH,EAA2BA,IAAhE,UACA,4DACA,mE,GAxCuBwB,IAAMC,WCKxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BX,M","file":"static/js/main.2bfcc979.chunk.js","sourcesContent":["import React from 'react'\nimport PDFViewer from 'pdf-viewer-reactjs'\n\nconst samplePdfDetails = {\n  \"fileName\": \"React.js PDF article\",\n  \"fileLink\": \"https://websitesetup.org/wp-content/uploads/2020/09/Javascript-Cheat-Sheet.pdf\",\n}\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasEventOccurred: false,\n      fileName: \"\",\n      fileLink: \"\",\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"flutterInAppWebViewPlatformReady\", (event) => {\n      window.flutter_inappwebview.callHandler('fileDetailsHandler', \"test\")\n        .then((fileDetailsJson) => {\n          this.handleEvent(fileDetailsJson.name, fileDetailsJson.link);\n        });\n    });\n  }\n\n  handleEvent = (name, link) => {\n    const herokuCorsProtectionUrl = \"https://cors-anywhere.herokuapp.com/\";\n    console.log(\"Event has occurred, rendering pdf now\");\n    this.setState({ hasEventOccurred: true, fileLink: herokuCorsProtectionUrl + link, fileName: name });\n  }\n\n  render() {\n    return (\n      this.state.hasEventOccurred ?\n        <div>\n          <h3>File Name : {this.state.fileName}</h3>\n          <PDFViewer\n            document={{\n              url: this.state.fileLink\n            }}\n          />\n        </div>\n\n        : <div onClick={() => this.handleEvent(samplePdfDetails.fileName, samplePdfDetails.fileLink)}>\n          < h2> No event has occurred yet</h2 >\n          < h3>click to see sample change</h3 >\n        </div >\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}